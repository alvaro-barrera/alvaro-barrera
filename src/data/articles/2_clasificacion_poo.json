{
    "slug": "clasificacion-de-objetos-en-la-programacion-orientada-a-objetos",
    "previous": "introduccion-al-modelado-orientado-a-objetos",
    "next": "disenio-en-el-proceso-de-software",
    "title": "Clasificación de Objetos en Programación Orientada a Objetos",
    "date": "24/08/2024",
    "summary": "Clasificación y roles de objetos en POO: entidad, frontera y control",
    "content": "En la programación orientada a objetos (POO), los tipos de objetos se pueden clasificar en tres categorías principales:<br/><br/><h5>Objetos de Entidad</h5><br/>Los objetos de entidad representan elementos del mundo real o conceptos que se modelan en el sistema, estos son la primera capa de abstracción al descomponer los objetos que conforman el sistema. Estos objetos suelen ser los más comunes y se utilizan para representar datos o información específica del dominio del problema. Por ejemplo, un objeto entidad ‘Vehículo’ podría tener atributos como marca, modelo, año, y kilometraje, y estaría sujeto a reglas de negocio relacionadas con el funcionamiento y la gestión de vehículos.<br/><br/><h5>Objetos de Frontera</h5><br/>Los objetos de frontera (también llamados objetos de interfaz, de presentación o límite) interactúan con el exterior del sistema, como usuarios, otros sistemas, o interfaces de red. Ejemplos incluyen formularios de entrada de datos, interfaces de usuario, y criterios de autenticación. Por ejemplo, un objeto de frontera podría ser un formulario de inicio de sesión donde los usuarios ingresan sus credenciales, y el sistema valida estos datos según ciertos requisitos de seguridad.<br/><br/><h5>Objetos de Control</h5><br/>Los objetos de control gestionan la lógica de flujo de los casos de uso o las interacciones dentro del sistema. Actúan como mediadores entre los objetos de entidad y los objetos de frontera, facilitando la comunicación y el procesamiento de datos. Ejemplos de objetos de control incluyen los ‘loaders’ (cargadores o barras de progreso) que indican el progreso de una tarea o  estado del mismo al usuario que interactúa con el sistema, y los botones que inician acciones específicas como guardar, eliminar o enviar. Además, estos objetos pueden manejar la coordinación de múltiples objetos de entidad para cumplir con un caso de uso."
}